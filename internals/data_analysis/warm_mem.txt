# R 4.5.1 started.
# 
# R version 4.5.1 (2025-06-13) -- "Great Square Root"
# Copyright (C) 2025 The R Foundation for Statistical Computing
# Platform: aarch64-apple-darwin20
# 
# R is free software and comes with ABSOLUTELY NO WARRANTY.
# You are welcome to redistribute it under certain conditions.
# Type 'license()' or 'licence()' for distribution details.
# 
#   Natural language support but running in an English locale
# 
# R is a collaborative project with many contributors.
# Type 'contributors()' for more information and
# 'citation()' on how to cite R or R packages in publications.
# 
# Type 'demo()' for some demos, 'help()' for on-line help, or
# 'help.start()' for an HTML browser interface to help.
# Type 'q()' to quit R.
# 
source("/Users/ruidazhou/code/green-lab/Warm Memory.R", echo = TRUE)
# 
# > install.packages(c("tidyverse", "ggplot2", "bestNormalize", "ARTool", "lmerTest", "xtable",
# +                   "dplyr", "viridis"))
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/tidyverse_2.0.0.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/ggplot2_4.0.0.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/bestNormalize_1.9.1.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/ARTool_0.11.2.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/lmerTest_3.1-3.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/xtable_1.8-4.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/dplyr_1.1.4.tgz'
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/viridis_0.6.5.tgz'
# 
# The downloaded binary packages are in
# 	/var/folders/7q/6bh483l55dldmn0m93yq85th0000gn/T//RtmpBacwSz/downloaded_packages
# 
# > install.packages("remotes")
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/remotes_2.5.0.tgz'
# Content type 'application/x-gzip' length 431784 bytes (421 KB)
# ==================================================
# downloaded 421 KB
# 
# 
# The downloaded binary packages are in
# 	/var/folders/7q/6bh483l55dldmn0m93yq85th0000gn/T//RtmpBacwSz/downloaded_packages
# 
# > install.packages("FSA")
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/FSA_0.10.0.tgz'
# Content type 'application/x-gzip' length 1372832 bytes (1.3 MB)
# ==================================================
# downloaded 1.3 MB
# 
# 
# The downloaded binary packages are in
# 	/var/folders/7q/6bh483l55dldmn0m93yq85th0000gn/T//RtmpBacwSz/downloaded_packages
# 
# > install.packages("effsize")
# trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.5/effsize_0.8.1.tgz'
# Content type 'application/x-gzip' length 64409 bytes (62 KB)
# ==================================================
# downloaded 62 KB
# 
# 
# The downloaded binary packages are in
# 	/var/folders/7q/6bh483l55dldmn0m93yq85th0000gn/T//RtmpBacwSz/downloaded_packages
# 
# > library(effsize)
# 
# > library(FSA)
# ## FSA v0.10.0. See citation('FSA') if used in publication.
# ## Run fishR() for related website and fishR('IFAR') for related book.
# 
# > library(tidyverse)
# ── Attaching core tidyverse packages ─────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──
# ✔ dplyr     1.1.4     ✔ readr     2.1.5
# ✔ forcats   1.0.1     ✔ stringr   1.5.2
# ✔ ggplot2   4.0.0     ✔ tibble    3.3.0
# ✔ lubridate 1.9.4     ✔ tidyr     1.3.1
# ✔ purrr     1.1.0     
# ── Conflicts ───────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
# ✖ dplyr::filter() masks stats::filter()
# ✖ dplyr::lag()    masks stats::lag()
# ℹ Use the conflicted package ([object Object])  to force all conflicts to become errors
# 
# > library(ggplot2)
# 
# > library(bestNormalize)
# Registered S3 method overwritten by 'butcher':
#   method                 from    
#   as.character.dev_topic generics
# 
# > library(ARTool)
# Registered S3 methods overwritten by 'car':
#   method       from
#   hist.boot    FSA 
#   confint.boot FSA 
# 
# > library(lmerTest)
# Loading required package: lme4
# Loading required package: Matrix
# 
# Attaching package: ‘Matrix’
# 
# The following objects are masked from ‘package:tidyr’:
# 
#     expand, pack, unpack
# 
# 
# Attaching package: ‘lmerTest’
# 
# The following object is masked from ‘package:lme4’:
# 
#     lmer
# 
# The following object is masked from ‘package:stats’:
# 
#     step
# 
# 
# > library(xtable)
# 
# > library(remotes)
# 
# > remotes::install_github("hrbrmstr/hrbrthemes")
# Using GitHub PAT from the git credential store.
# Skipping install of 'hrbrthemes' from a github remote, the SHA1 (d3fd0294) has not changed since last install.
#   Use `force = TRUE` to force installation
# 
# > library(dplyr)
# 
# > library(viridis)
# Loading required package: viridisLite
# 
# > library(hrbrthemes)
# 
# > dat_data <- read.csv("./run_table.csv") %>%
# +   select(
# +     benchmark,
# +     compilation,
# +     cold_start_energy, warm_start_energy,
# +     cold_s .... [TRUNCATED] 
# 
# > # Data preparation
# > dat_dependent_var <- dat_data %>%
# +   select(benchmark, compilation, warm_start_memory_util) %>%
# +   mutate(
# +     benchmark =  .... [TRUNCATED] 
# 
# > # Min Max Mean Median SD
# > summary_stats <- dat_dependent_var %>%
# +   group_by(benchmark, compilation) %>%
# +   summarise(
# +     n = n(),
# +     min = .... [TRUNCATED] 
# 
# > # Descriptive stats (min, max, mean, median, sd):
# > print(summary_stats, n = Inf)
# # A tibble: 24 × 8
#    benchmark                   compilation     n     min     max    mean  median        sd
#    <fct>                       <fct>       <int>   <dbl>   <dbl>   <dbl>   <dbl>     <dbl>
#  1 binary_trees                cython         15  446.    457.    451.    450.      3.40  
#  2 binary_trees                numba          15 1601.   4299.   2672.   1605.   1354.    
#  3 binary_trees                original       15  455.    466.    459.    458.      3.42  
#  4 fannkuch                    cython         15   24.1    24.3    24.2    24.2     0.0875
#  5 fannkuch                    numba          15  144.    145.    144.    144.      0.116 
#  6 fannkuch                    original       15   23.9    24.2    24.0    24.0     0.102 
#  7 insertionsort               cython         15   15.9    16.2    16.0    16.0     0.0896
#  8 insertionsort               numba          15  140.    141.    141.    141.      0.261 
#  9 insertionsort               original       15   15.6    15.9    15.7    15.7     0.0815
# 10 mandlebrot                  cython         15   12.9    13.1    13.0    12.9     0.0733
# 11 mandlebrot                  numba          15  140.    140.    140.    140.      0.227 
# 12 mandlebrot                  original       15   12.3    12.9    12.5    12.5     0.130 
# 13 nbody                       cython         15    9.95   10.2    10.0    10.0     0.0974
# 14 nbody                       numba          15  145.    146.    146.    146.      0.194 
# 15 nbody                       original       15    9.46    9.75    9.61    9.61    0.0823
# 16 recur_matrix_multiplication cython         15   24.0    24.3    24.1    24.1     0.0786
# 17 recur_matrix_multiplication numba          15  144.    145.    144.    144.      0.272 
# 18 recur_matrix_multiplication original       15    9.56    9.82    9.67    9.66    0.0698
# 19 richards                    cython         15   24.1    24.4    24.3    24.2     0.1000
# 20 richards                    numba          15  140.    141.    140.    140.      0.187 
# 21 richards                    original       15   24.4    24.9    24.6    24.5     0.114 
# 22 spectral_norm               cython         15   75.7    77.2    76.3    76.3     0.452 
# 23 spectral_norm               numba          15  418.    420.    419.    420.      0.649 
# 24 spectral_norm               original       15   73.1    74.7    74.1    74.1     0.463 
# 
# > # Volin + Box
# > # Violin + Box (excluding numba just for plotting)
# > ggplot(
# +   dat_dependent_var %>% filter(compilation != "numba"),
# +   aes(x = c .... [TRUNCATED] 
# 
# > # Normality check
# > shapiro_results <- dat_dependent_var %>%
# +   group_by(benchmark, compilation) %>%
# +   summarise(
# +     n = n(),
# +     p_value =  .... [TRUNCATED] 
# `summarise()` has grouped output by 'benchmark'. You can override using the `.groups` argument.
# 
# > # Normality Check Results
# > print(shapiro_results, n = Inf)
# # A tibble: 24 × 5
#    benchmark                   compilation     n   p_value normal
#    <fct>                       <fct>       <int>     <dbl> <chr> 
#  1 binary_trees                cython         15 0.339     Yes   
#  2 binary_trees                numba          15 0.0000547 No    
#  3 binary_trees                original       15 0.0130    No    
#  4 fannkuch                    cython         15 0.0757    Yes   
#  5 fannkuch                    numba          15 0.364     Yes   
#  6 fannkuch                    original       15 0.239     Yes   
#  7 insertionsort               cython         15 0.348     Yes   
#  8 insertionsort               numba          15 0.663     Yes   
#  9 insertionsort               original       15 0.134     Yes   
# 10 mandlebrot                  cython         15 0.0213    No    
# 11 mandlebrot                  numba          15 0.502     Yes   
# 12 mandlebrot                  original       15 0.0755    Yes   
# 13 nbody                       cython         15 0.0142    No    
# 14 nbody                       numba          15 0.0177    No    
# 15 nbody                       original       15 0.487     Yes   
# 16 recur_matrix_multiplication cython         15 0.425     Yes   
# 17 recur_matrix_multiplication numba          15 0.461     Yes   
# 18 recur_matrix_multiplication original       15 0.721     Yes   
# 19 richards                    cython         15 0.293     Yes   
# 20 richards                    numba          15 0.999     Yes   
# 21 richards                    original       15 0.0105    No    
# 22 spectral_norm               cython         15 0.0780    Yes   
# 23 spectral_norm               numba          15 0.0411    No    
# 24 spectral_norm               original       15 0.580     Yes   
# 
# > # Kruskal–Wallis test
# > kw_result <- dat_dependent_var %>%
# +   group_by(benchmark) %>%
# +   summarize(
# +     kw = list(kruskal.test(warm_start_memory .... [TRUNCATED] 
# 
# > # Kruskal-Wallis Test Results
# > print(kw_result, n = Inf)
# # A tibble: 8 × 6
#   benchmark                   kw      statistic    df       p_value significant
#   <fct>                       <list>      <dbl> <int>         <dbl> <chr>      
# 1 binary_trees                <htest>      37.8     2 0.00000000623 Yes        
# 2 fannkuch                    <htest>      37.7     2 0.00000000641 Yes        
# 3 insertionsort               <htest>      39.1     2 0.00000000316 Yes        
# 4 mandlebrot                  <htest>      39.1     2 0.00000000317 Yes        
# 5 nbody                       <htest>      39.2     2 0.00000000311 Yes        
# 6 recur_matrix_multiplication <htest>      39.2     2 0.00000000315 Yes        
# 7 richards                    <htest>      39.2     2 0.00000000313 Yes        
# 8 spectral_norm               <htest>      39.1     2 0.00000000317 Yes        
# 
# > # Post-hoc test
# > kw_result_dunn <- dat_dependent_var %>%
# +   group_by(benchmark) %>%
# +   summarize(
# +     dunn = list(dunnTest(
# +       warm_start_ .... [TRUNCATED] 
# 
# > # Dunn's post-hoc test results (Bonferroni-adjusted):
# > print(kw_result_dunn, n = Inf)
# # A tibble: 24 × 6
#    benchmark                   Comparison            Z  P.unadj         P.adj significant
#    <fct>                       <chr>             <dbl>    <dbl>         <dbl> <chr>      
#  1 binary_trees                cython - numba    -6.14 8.04e-10 0.00000000241 Yes        
#  2 binary_trees                cython - original -2.91 3.67e- 3 0.0110        Yes        
#  3 binary_trees                numba - original   3.24 1.20e- 3 0.00360       Yes        
#  4 fannkuch                    cython - numba    -3.25 1.17e- 3 0.00350       Yes        
#  5 fannkuch                    cython - original  2.89 3.82e- 3 0.0115        Yes        
#  6 fannkuch                    numba - original   6.14 8.30e-10 0.00000000249 Yes        
#  7 insertionsort               cython - numba    -3.13 1.76e- 3 0.00528       Yes        
#  8 insertionsort               cython - original  3.13 1.76e- 3 0.00528       Yes        
#  9 insertionsort               numba - original   6.26 3.94e-10 0.00000000118 Yes        
# 10 mandlebrot                  cython - numba    -3.13 1.76e- 3 0.00528       Yes        
# 11 mandlebrot                  cython - original  3.13 1.76e- 3 0.00528       Yes        
# 12 mandlebrot                  numba - original   6.26 3.94e-10 0.00000000118 Yes        
# 13 nbody                       cython - numba    -3.13 1.75e- 3 0.00525       Yes        
# 14 nbody                       cython - original  3.13 1.75e- 3 0.00525       Yes        
# 15 nbody                       numba - original   6.26 3.87e-10 0.00000000116 Yes        
# 16 recur_matrix_multiplication cython - numba    -3.13 1.76e- 3 0.00527       Yes        
# 17 recur_matrix_multiplication cython - original  3.13 1.76e- 3 0.00527       Yes        
# 18 recur_matrix_multiplication numba - original   6.26 3.92e-10 0.00000000118 Yes        
# 19 richards                    cython - numba    -6.26 3.90e-10 0.00000000117 Yes        
# 20 richards                    cython - original -3.13 1.75e- 3 0.00526       Yes        
# 21 richards                    numba - original   3.13 1.75e- 3 0.00526       Yes        
# 22 spectral_norm               cython - numba    -3.13 1.76e- 3 0.00528       Yes        
# 23 spectral_norm               cython - original  3.13 1.76e- 3 0.00528       Yes        
# 24 spectral_norm               numba - original   6.26 3.95e-10 0.00000000118 Yes        
# 
# > # quantify difference (% diff and cliff's delta)
# > # For each significant pair from Dunn's test, compute:
# > #   (a) percentage difference in medians .... [TRUNCATED] 
# 
# > # 2) Start from significant Dunn pairs and attach both groups' vectors/medians
# > filtered_yes_dunn <- kw_result_dunn %>%
# +   filter(significant == " ..." ... [TRUNCATED] 
# 
# > # Effect size (Cliff's delta) and percentage median difference for significant Dunn pairs:
# > print(filtered_yes_dunn, n = Inf)
# # A tibble: 24 × 10
#    benchmark                   group1 group2      n1    n2 median1 median2 pct_diff cliffs_delta cliffs_interpretation
#    <fct>                       <chr>  <chr>    <int> <int>   <dbl>   <dbl>    <dbl>        <dbl> <chr>                
#  1 binary_trees                cython numba       15    15   450.  1605.      72.0        -1     large                
#  2 binary_trees                cython original    15    15   450.   458.       1.72       -0.929 large                
#  3 binary_trees                numba  original    15    15  1605.   458.    -251.          1     large                
#  4 fannkuch                    cython numba       15    15    24.2  144.      83.2        -1     large                
#  5 fannkuch                    cython original    15    15    24.2   24.0     -1.16        0.924 large                
#  6 fannkuch                    numba  original    15    15   144.    24.0   -502.          1     large                
#  7 insertionsort               cython numba       15    15    16.0  141.      88.6        -1     large                
#  8 insertionsort               cython original    15    15    16.0   15.7     -1.94        1     large                
#  9 insertionsort               numba  original    15    15   141.    15.7   -796.          1     large                
# 10 mandlebrot                  cython numba       15    15    12.9  140.      90.8        -1     large                
# 11 mandlebrot                  cython original    15    15    12.9   12.5     -3.5         1     large                
# 12 mandlebrot                  numba  original    15    15   140.    12.5  -1020.          1     large                
# 13 nbody                       cython numba       15    15    10.0  146.      93.1        -1     large                
# 14 nbody                       cython original    15    15    10.0    9.61    -4.55        1     large                
# 15 nbody                       numba  original    15    15   146.     9.61 -1415.          1     large                
# 16 recur_matrix_multiplication cython numba       15    15    24.1  144.      83.3        -1     large                
# 17 recur_matrix_multiplication cython original    15    15    24.1    9.66  -149.          1     large                
# 18 recur_matrix_multiplication numba  original    15    15   144.     9.66 -1392.          1     large                
# 19 richards                    cython numba       15    15    24.2  140.      82.7        -1     large                
# 20 richards                    cython original    15    15    24.2   24.5      1.19       -1     large                
# 21 richards                    numba  original    15    15   140.    24.5   -472.          1     large                
# 22 spectral_norm               cython numba       15    15    76.3  420.      81.8        -1     large                
# 23 spectral_norm               cython original    15    15    76.3   74.1     -2.91        1     large                
# 24 spectral_norm               numba  original    15    15   420.    74.1   -466.          1     large                
# Warning messages:
# 1: There was 1 warning in `summarize()`.
# ℹ In argument: `kw = list(kruskal.test(warm_start_memory_util ~ compilation, data = cur_data()))`.
# ℹ In group 1: `benchmark = binary_trees`.
# Caused by warning:
# ! `cur_data()` was deprecated in dplyr 1.1.0.
# ℹ Please use `pick()` instead.
# This warning is displayed once every 8 hours.
# Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. 
# 2: There were 22 warnings in `mutate()`.
# The first warning was:
# ℹ In argument: `cliffs_delta = tryCatch(...)`.
# ℹ In row 1.
# Caused by warning in `cliff.delta.default()`:
# ! The samples are fully disjoint, using approximate Confidence Interval estimation
# ℹ Run dplyr::last_dplyr_warnings() ([object Object])  to see the 21 remaining warnings. 